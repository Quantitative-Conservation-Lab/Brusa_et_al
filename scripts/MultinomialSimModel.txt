model {

#########################SPECIES MIS-ID COMPONENT#########################

#priors on the confusion probabiities - mlogit link
for(o in 1:n.observers){
  pr.obsJ.spK[1,1,o] <- 1-pr.obsJ.spK[2,1,o]-pr.obsJ.spK[3,1,o]-pr.obsJ.spK[4,1,o]
  pr.obsJ.spK[2,1,o] <- exp(m.pr.obsJ.spK[2,1,o])/(1+exp(m.pr.obsJ.spK[2,1,o]) + exp(m.pr.obsJ.spK[3,1,o]) + 
  exp(m.pr.obsJ.spK[4,1,o]))
  pr.obsJ.spK[3,1,o] <- exp(m.pr.obsJ.spK[3,1,o])/(1+exp(m.pr.obsJ.spK[2,1,o]) + exp(m.pr.obsJ.spK[3,1,o]) + 
  exp(m.pr.obsJ.spK[4,1,o]))
  pr.obsJ.spK[4,1,o] <- exp(m.pr.obsJ.spK[4,1,o])/(1+exp(m.pr.obsJ.spK[2,1,o]) + exp(m.pr.obsJ.spK[3,1,o]) + 
  exp(m.pr.obsJ.spK[4,1,o]))

  pr.obsJ.spK[1,2,o] <- exp(m.pr.obsJ.spK[1,2,o])/(1+exp(m.pr.obsJ.spK[1,2,o]) + exp(m.pr.obsJ.spK[3,2,o]) + 
  exp(m.pr.obsJ.spK[4,2,o]))
  pr.obsJ.spK[2,2,o] <- 1-pr.obsJ.spK[1,2,o]-pr.obsJ.spK[3,2,o]-pr.obsJ.spK[4,2,o]
  pr.obsJ.spK[3,2,o] <- exp(m.pr.obsJ.spK[3,2,o])/(1+exp(m.pr.obsJ.spK[1,2,o]) + exp(m.pr.obsJ.spK[3,2,o]) + 
  exp(m.pr.obsJ.spK[4,2,o]))
  pr.obsJ.spK[4,2,o] <- exp(m.pr.obsJ.spK[4,2,o])/(1+exp(m.pr.obsJ.spK[1,2,o]) + exp(m.pr.obsJ.spK[3,2,o]) + 
  exp(m.pr.obsJ.spK[4,2,o]))

  pr.obsJ.spK[1,3,o] <- exp(m.pr.obsJ.spK[1,3,o])/(1+exp(m.pr.obsJ.spK[1,3,o]) + exp(m.pr.obsJ.spK[2,3,o]) + 
  exp(m.pr.obsJ.spK[4,3,o]))
  pr.obsJ.spK[2,3,o] <- exp(m.pr.obsJ.spK[2,3,o])/(1+exp(m.pr.obsJ.spK[1,3,o]) + exp(m.pr.obsJ.spK[2,3,o]) + 
  exp(m.pr.obsJ.spK[4,3,o]))
  pr.obsJ.spK[3,3,o] <- 1-pr.obsJ.spK[1,3,o]-pr.obsJ.spK[2,3,o]-pr.obsJ.spK[4,3,o]
  pr.obsJ.spK[4,3,o] <- exp(m.pr.obsJ.spK[4,3,o])/(1+exp(m.pr.obsJ.spK[1,3,o]) + exp(m.pr.obsJ.spK[2,3,o]) + 
  exp(m.pr.obsJ.spK[4,3,o]))

  pr.obsJ.spK[1,4,o] <- exp(m.pr.obsJ.spK[1,4,o])/(1+exp(m.pr.obsJ.spK[1,4,o]) + exp(m.pr.obsJ.spK[2,4,o]) + 
  exp(m.pr.obsJ.spK[3,4,o]))
  pr.obsJ.spK[2,4,o] <- exp(m.pr.obsJ.spK[2,4,o])/(1+exp(m.pr.obsJ.spK[1,4,o]) + exp(m.pr.obsJ.spK[2,4,o]) + 
  exp(m.pr.obsJ.spK[3,4,o]))
  pr.obsJ.spK[3,4,o] <- exp(m.pr.obsJ.spK[3,4,o])/(1+exp(m.pr.obsJ.spK[1,4,o]) + exp(m.pr.obsJ.spK[2,4,o]) + 
  exp(m.pr.obsJ.spK[3,4,o]))
  pr.obsJ.spK[4,4,o] <- 1-pr.obsJ.spK[1,4,o]-pr.obsJ.spK[2,4,o]-pr.obsJ.spK[3,4,o]

  m.pr.obsJ.spK[2,1,o] ~ dnorm(0,0.01)      
  m.pr.obsJ.spK[3,1,o] ~ dnorm(0,0.01)      
  m.pr.obsJ.spK[4,1,o] ~ dnorm(0,0.01) 
  m.pr.obsJ.spK[1,2,o] ~ dnorm(0,0.01)
  m.pr.obsJ.spK[3,2,o] ~ dnorm(0,0.01)
  m.pr.obsJ.spK[4,2,o] ~ dnorm(0,0.01)
  m.pr.obsJ.spK[1,3,o] ~ dnorm(0,0.01)
  m.pr.obsJ.spK[2,3,o] ~ dnorm(0,0.01)
  m.pr.obsJ.spK[4,3,o] ~ dnorm(0,0.01)
  m.pr.obsJ.spK[1,4,o] ~ dnorm(0,0.01)
  m.pr.obsJ.spK[2,4,o] ~ dnorm(0,0.01)
  m.pr.obsJ.spK[3,4,o] ~ dnorm(0,0.01)
}

#probability of observing species j on transect t for observer o is a function of how common species k is there and the 
#probability of observing j given true species k
#pr.spK is estimated from the POV camera, so we are just modeling pr.obsJ.spK in this part of the code  
for(t in 1:n.transects){
  for(o in 1:n.observers){
    pr.obsJ[t,1,o] <- pr.spK[t,1]*pr.obsJ.spK[1,1,o] + pr.spK[t,2]*pr.obsJ.spK[1,2,o] +
                      pr.spK[t,3]*pr.obsJ.spK[1,3,o] + pr.spK[t,4]*pr.obsJ.spK[1,4,o]

    pr.obsJ[t,2,o] <- pr.spK[t,1]*pr.obsJ.spK[2,1,o] + pr.spK[t,2]*pr.obsJ.spK[2,2,o] +
                      pr.spK[t,3]*pr.obsJ.spK[2,3,o] + pr.spK[t,4]*pr.obsJ.spK[2,4,o]

    pr.obsJ[t,3,o] <- pr.spK[t,1]*pr.obsJ.spK[3,1,o] + pr.spK[t,2]*pr.obsJ.spK[3,2,o] +
                      pr.spK[t,3]*pr.obsJ.spK[3,3,o] + pr.spK[t,4]*pr.obsJ.spK[3,4,o]

    pr.obsJ[t,4,o] <- pr.spK[t,1]*pr.obsJ.spK[4,1,o] + pr.spK[t,2]*pr.obsJ.spK[4,2,o] +
                      pr.spK[t,3]*pr.obsJ.spK[4,3,o] + pr.spK[t,4]*pr.obsJ.spK[4,4,o]

  }
}

#derived probability of species K given J was observed, Bayes rule 
#then take the mean across observers 
for(t in 1:n.transects){
  for(j in 1:n.species){
    for(k in 1:n.species){
      for(o in 1:n.observers){
        pr.spK.obsJ[t,k,j,o] <- (pr.obsJ.spK[j,k,o]*pr.spK[t,1])/(pr.obsJ[t,j,o])
      }
      pr.spK.obsJ.mean[t,k,j] <- (pr.spK.obsJ[t,k,j,1] + pr.spK.obsJ[t,k,j,2])/2 
    }
  }
}


#the species ID data by observer are multinomial given the probability of observing species j and the total observed      
for(i in 1:n.groups){
  for(o in 1:n.observers){
    ID[i,,o] ~ dmultinom(pr.obsJ[tr[i],,o],M.obs[i,o])
  }
}

#########################SPECIES COMPOSITION COMPONENT(POV)#########################

#prior on species composition for transect t
for(t in 1:n.transects){
  pr.spK[t,1:4] ~ ddirch(alpha.sp)
}

  #POV camera data - multinomial sample from the total number of birds in the group, with pr.spK probabilities   
for(i in 1:n.groups){
  POV[i,] ~ dmultinom(pr.spK[tr[i],], M[i])
}
#########################AVAILABILITY COMPONENT(FF vs OBSERVERS)#########################

for(i in 1:n.groups){
  for(k in 1:n.species){
    #FF camera data - abundance of species k in group i prior to plane passing (data), modeled with a mean mu
    #might need a negative binomial here 
    FF[i,k] ~ dpois(mu[i,k])
    
    #the relationship between abundance from observers and abundance before the plane passed, by species
    mu[i,k] <- beta[k] * lambda[i,k]
  }
}

#prior on beta 
for(k in 1:n.species){
  beta[k] ~ dunif(0,5)
}  

#########################DETECTION COMPONENT#########################
  
#prior for abundance of species k in group i after plane passing (predicted from N-mix)
#might need a negative binomial here 
for(i in 1:n.groups){
  for(k in 1:n.species){
    N.obsJ[i,k] ~ dpois(lambda[i,k])
    
    #prior on abundance of species j in group i#
    lambda[i,k] ~ dgamma(1,1)
  }
}

#estimation of the abundance of putative species J - Nmixture
for(j in 1:n.species){
  for(o in 1:n.observers){
    for(i in 1:n.groups){
      obs[i,j,o] ~ dbinom(p[j,o],N.obsJ[i,j])
    }
    #prior for detection probability 
    p[j,o] ~ dbeta(1,1)
  }
}  

#########################CORRECTING FOR MIS-ID#########################
#calculate the number of species K expected for each J observed 
for(i in 1:n.groups){
  for(j in 1:n.species){
    N.spK.obsJ[i,1:4,j] ~ dmultinom(pr.spK.obsJ.mean[tr[i],1:4,j],N.obsJ[i,j])
  }
}
#sum over observed species J to get the abundance of species K 
for(i in 1:n.transects){
  for(k in 1:n.species){
    N.spK[i,k] <- sum(N.spK.obsJ[i,k,1:4])
  }
}
#take the mean of K  
for(k in 1:n.species){
  N.spK.mean[k] <- mean(N.spK[,k]) 
}

#########################BASIC DETECTION COMPONENT#########################
# THIS IS THE BASIC DETECTION MODEL THAT DOESN'T ACCOUNT FOR MIS-ID 
#prior for abundance of species k in group i after plane passing (predicted from N-mix)
#might need a negative binomial here 
#for(i in 1:n.groups){
#  for(k in 1:n.species){
#    N[i,k] ~ dpois(lambda[i,k])
    
#    # prior on abundance of species j in group i
#    lambda[i,k] ~ dgamma(1,1)
#  }
#}

##prior for detection probability 
#for(k in 1:n.species){
#  for(o in 1:n.observers){
#    p[k,o] ~ dbeta(1,1)
#  }
#}  
  
##observation data 
#for(i in 1:n.groups){
#  for(j in 1:n.species){
#    for(o in 1:n.observers){
#      obs[i,j,o] ~ dbin(p[j,o],N[i,j])
#    }
#  }
#}

}